namespace UglyToad.PdfPig.Tests.Filters.Jbig2
{
    using System.Collections.Generic;
    using System.Security.Cryptography;
    using System.Text;
    using UglyToad.PdfPig.Filters.Jbig2;
    using UglyToad.PdfPig.Tests.Images;
    using Xunit;

    public class ChecksumTest
    {
        // See: https://jbig2dec.com/tests/index.html
        public static readonly IEnumerable<object[]> Data =
            new object[][] {
                new[] { "042_1.jb2", "69-26-6629-1793-107941058147-58-79-37-31-79" },
                new[] { "042_2.jb2", "69-26-6629-1793-107941058147-58-79-37-31-79" },
                new[] { "042_3.jb2", "69-26-6629-1793-107941058147-58-79-37-31-79" },
                new[] { "042_4.jb2", "69-26-6629-1793-107941058147-58-79-37-31-79" },
                new[] { "042_5.jb2", "69-26-6629-1793-107941058147-58-79-37-31-79" },
                new[] { "042_6.jb2", "69-26-6629-1793-107941058147-58-79-37-31-79" },
                new[] { "042_7.jb2", "69-26-6629-1793-107941058147-58-79-37-31-79" },
                new[] { "042_8.jb2", "69-26-6629-1793-107941058147-58-79-37-31-79" },
                new[] { "042_9.jb2", "69-26-6629-1793-107941058147-58-79-37-31-79" },
                new[] { "042_10.jb2", "69-26-6629-1793-107941058147-58-79-37-31-79" },
                new[] { "042_11.jb2", "69-26-6629-1793-107941058147-58-79-37-31-79" },
                new[] { "042_12.jb2", "69-26-6629-1793-107941058147-58-79-37-31-79" },
                // NOTE: These two can neither we nor PDFBox decode without error :-(
                // new[] { "042_13.jb2", "69-26-6629-1793-107941058147-58-79-37-31-79" },
                // new[] { "042_14.jb2", "69-26-6629-1793-107941058147-58-79-37-31-79" },
                new[] { "042_15.jb2", "69-26-6629-1793-107941058147-58-79-37-31-79" },
                new[] { "042_16.jb2", "69-26-6629-1793-107941058147-58-79-37-31-79" },
                new[] { "042_17.jb2", "69-26-6629-1793-107941058147-58-79-37-31-79" },
                new[] { "042_18.jb2", "69-26-6629-1793-107941058147-58-79-37-31-79" },
                new[] { "042_19.jb2", "69-26-6629-1793-107941058147-58-79-37-31-79" },
                new[] { "042_20.jb2", "69-26-6629-1793-107941058147-58-79-37-31-79" },
                new[] { "042_21.jb2", "69-26-6629-1793-107941058147-58-79-37-31-79" },
                new[] { "042_22.jb2", "69-26-6629-1793-107941058147-58-79-37-31-79" },
                new[] { "042_23.jb2", "69-26-6629-1793-107941058147-58-79-37-31-79" },
                new[] { "042_24.jb2", "69-26-6629-1793-107941058147-58-79-37-31-79" },
                new[] { "042_25.jb2", "69-26-6629-1793-107941058147-58-79-37-31-79" },
                new[] { "amb_1.jb2", "58311272494-318210035-125100-344625-126-79" },
                new[] { "amb_2.jb2", "58311272494-318210035-125100-344625-126-79" },
                new[] { "002.jb2", "-12713-4587-92-651657111-57121-1582564895" },
                new[] { "003.jb2", "-37-108-89-33-78-5019-966-96-124-9675-1-108-24" },
                new[] { "004.jb2", "-10709436-24-59-48-217114-37-85-3126-24" },
                new[] { "005.jb2", "712610586-1224021396100112-102-77-1177851" },
                new[] { "006.jb2", "-8719-116-83-83-35-3425-64-528667602154-25" },
                new[] { "007.jb2", "6171-125-109-20-128-71925295955793-127-41-122" },
                new[] { "sampledata.jb2", "104-68-555325117-4757-48527676-9775-8432" },
                new[] { "sampledata_page1.jb2", "104-68-555325117-4757-48527676-9775-8432" },
                new[] { "sampledata_page2.jb2", "104-68-555325117-4757-48527676-9775-8432" },
                new[] { "sampledata_page3.jb2", "-7825-56-41-30-19-719536-3678580-61-2586" },
                new[] { "20123110001.jb2", "60-96-101-2458-3335024-5468-5-11068-78-80" },
                new[] { "20123110002.jb2", "-28-921048181-117-48-96126-110-9-2865611113" },
                new[] { "20123110003.jb2", "-3942-239351-28-56-729169-5839122-439231" },
                new[] { "20123110004.jb2", "-49-101-28-20-57-4-24-17-9352104-106-118-122-122" },
                new[] { "20123110005.jb2", "-48221261779-94-838820-127-114110-2-88-80-106" },
                new[] { "20123110006.jb2", "81-11870-63-30124-1614-45838-53-123-41639" },
                new[] { "20123110007.jb2", "12183-49124728346-29-124-9-10775-63-44116103" },
                new[] { "20123110008.jb2", "15-74-49-45958458-67-2545-96-119-122-60100-35" },
                new[] { "20123110009.jb2", "36115-114-28-123-3-70-87-113-4197-8512396113-65" },
                new[] { "20123110010.jb2", "-109-1069-61-1576-67-43122406037-75-1091115" },
                new[] { "PDFjs_8145_p55.jb2", "-116-2412448-85-120-68-48-36-77-1236891-493365" },
                new[] { "unitized_page_ii.jb2", "-12766-66-96123-7212470-3-116-72114-6462-112" },
            };

        [Theory]
        [MemberData(nameof(Data))]
        public void CompareChecksum(string filename, string checksum)
        {
            var iis = new ImageInputStream(ImageHelpers.LoadFileBytes(filename));
            var doc = new Jbig2Document(iis);

            Bitmap b = doc.GetPage(1).GetBitmap();
            byte[] digest = Hash(b.GetByteArray());

            var stringBuilder = new StringBuilder();
            foreach (byte toAppend in digest)
            {
                stringBuilder.Append((sbyte)toAppend);
            }

            Assert.Equal(checksum, stringBuilder.ToString());
        }

        private static byte[] Hash(byte[] input)
        {
            using (var md5 = MD5.Create())
            {
                return md5.ComputeHash(input);
            }
        }
    }
}
